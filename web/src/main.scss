html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}

article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

@function urls($url, $multiple) {

  $result: ();
  $fontsBaseURL: './fonts/';

  @if $multiple == true {
      @each $item in ('.ttf', '.eot', '.woff', '.svg') {
          $result: append($result, url('#{$fontsBaseURL}#{$url}#{$item}'), 'comma');
      }

      @return $result;

  } @else {
      @return url('#{$fontsBaseURL}#{$url}.ttf');
  }
}

@mixin Font($family, $src-name, $multiple) {
  $url: urls($src-name, $multiple);
  font-family: $family;   
  src: $url;
  font-weight: normal;
  font-style: normal;
}

@font-face {
  @include Font("SnellRoundhand", "SnellRoundhand", false);
}

@font-face {
  @include Font("ProximaNova-Light", "ProximaNova-Light", true);
}

@font-face {
  @include Font("ProximaNova-Medium", "ProximaNova-Medium", true);
}

@font-face {
  @include Font("ProximaNova-Regular", "ProximaNova-Regular", true);
}

main {   
  margin: 1em auto;
  max-width: 95%;
  box-sizing: border-box;
  padding: 40px;
  border-radius: 5px; 
  background: RGBA(255,255,255,1);
  -webkit-box-shadow:  0px 0px 15px 0px rgba(0, 0, 0, .45);        
  box-shadow:  0px 0px 15px 0px rgba(0, 0, 0, .45); 
}

html,
body {
  font-size: 1em;
  background: #fff;
  font-family: "ProximaNova-Light", sans-serif;
  width: 100%;
  margin: 0px;
  padding: 0px;
  overflow-x: hidden;
}
footer {
  background: #fff;
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 1em 0;

  span {
    width: 40px;
    opacity: 0;
  }

  p {
      color: white;
      text-align: center;
  }
}
@media (max-width: 992px) {
  body {
    font-size: 14px;
  }
}
@media (max-width: 767px) {
  body {
    font-size: 12px;
  }
}
@media (max-width: 413px) {
  body,
  html {
    min-width: 320px;
  }
}
body input,
body button {
  outline: none;
}

h1 {
  font-size: 1.8em;
  margin-bottom: .5em;
  font-family: "ProximaNova-Medium", sans-serif;
  font-weight: 500;
  line-height: 1.1;
}
h2 {
  font-size: 1.1em;
  font-family: "ProximaNova-Regular", sans-serif;
  font-weight: 500;
  line-height: 1.1;
}
@media (max-width: 992px) {
  h1 {
    font-size: 2em;
  }
  h2 {
    font-size: 1.5em;
    line-height: 1.3;
  }
}
@media (max-width: 767px) {
  h1 {
    font-size: 1.5em;
    text-align: center;
  }
}
@media (max-width: 413px) {
  h1 {
    font-size: 1.4em;
  }
}

p {
  font-size: 1.1em;
  font-family: "ProximaNova-Light", sans-serif;
  font-weight: 500;
  line-height: 1.5;
}
@media (max-width: 992px) {
  p {
    font-size: 1.3em;
  }
}
@media (max-width: 767px) {
  p {
    font-size: 1.1em;
    text-align: center;
  }

  main {
    p {
      width: 380px;
    }
  }
}
@media (max-width: 413px) {
  p {
    font-size: 1.1em;
  }

  main {
    p {
      width: 280px;
    }
  }
}

b {
  font-weight: bold;
}

@media(max-width: 1199px) {
  br {
    display: none;
  }
}


.container {
  transition: all 0.5s ease 0s;
}
@media(min-width: 1200px) {
  .container {
    width: 1195px;
  }
}
@media(max-width: 767px) {
  .container {
    width: 414px;
  }
}
@media(max-width: 413px) {
  .container {
    width: 320px;
  }
}

/*loader*/

#cube-loader {
  align-items: center;
  display: flex;
  height: 100%;
  width: 100%;
  position: fixed;
  & .caption {
    margin: 0 auto;
  }
  .cube-loader {
    width: 73px;
    height: 73px;
    margin: 0 auto;
    margin-top: 49px;
    position: relative;
    transform: rotateZ(45deg);

    & .cube {
      position: relative;
      transform: rotateZ(45deg);
      width: 50%;
      height: 50%;
      float: left;
      transform: scale(1.1);
    }
    & .cube:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(52, 73, 94, 1.0);
      animation: cube-loader 2.76s infinite linear both;
      transform-origin: 100% 100%;
    }
    & .loader-2 {
      transform: scale(1.1) rotateZ(90deg);
    }
    & .loader-3 {
      transform: scale(1.1) rotateZ(180deg);
    }
    & .loader-4 {
      transform: scale(1.1) rotateZ(270deg);
    }
    & .loader-2:before {
      animation-delay: 0.35s;
    }
    & .loader-3:before {
      animation-delay: 0.69s;
    }
    & .loader-4:before {
      animation-delay: 1.04s;
    }
  }
}

@keyframes cube-loader {
  0%, 10% {
    transform: perspective(136px) rotateX(-180deg);
    opacity: 0;
  }
  25%, 75% {
    transform: perspective(136px) rotateX(0deg);
    opacity: 1;
  }
  90%, 100% {
    transform: perspective(136px) rotateY(180deg);
    opacity: 0;
  }
}


/*============================*/